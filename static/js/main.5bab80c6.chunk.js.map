{"version":3,"sources":["components/Common/FormsControls/FormsControls.module.css","components/Common/Preloader/Preloader.jsx","components/Header.module.css","utils/validators/validator.js","redux/profile-reducer.js","assets/images/user.png","redux/dialogs-reducer.js","components/Offices/Offices.module.css","components/Users/user.module.css","assets/images/preloader.svg","api/api.js","components/Navbar/Navbar.module.css","reportWebVitals.js","components/Navbar/Navbar.jsx","components/Offices/Offices.jsx","components/Employees/Employees.jsx","utils/objects-helpers.js","redux/user-reducer.js","components/Common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/user-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/office-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","components/Hoc/WithSuspence.js","App.js","index.js","components/Common/FormsControls/FormsControls.js"],"names":["module","exports","Preloader","props","src","preloader","required","value","maxLengthCreator","maxLength","length","initialState","posts","id","message","countsLike","profile","status","profileReducer","state","action","type","newPost","newPostText","filter","p","postId","addPostActionCreator","setStatus","getUserProfile","userId","dispatch","a","profileAPI","getProfile","response","data","getStatus","updateStatus","resultCode","messages","dialogs","name","dialogsReducer","body","newMessageBody","m","messageId","sendMessageCreator","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","follow","post","unfollow","delete","put","AuthAPI","me","login","email","password","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","classes","nav","item","to","activeClassName","activeLink","Offices","officeInformation","map","info","officeName","address","country","Button","variant","component","color","startIcon","Table","s","mainTable","Employees","updateObjectInArray","items","itemId","objPropName","newObjectProps","u","users","totalUsersCount","isFetching","followingInProgress","userReducer","followed","count","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","useState","Pagination","onClick","e","target","textContent","User","user","photos","userPhoto","style","disabled","some","Users","key","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","this","React","Component","compose","connect","page","totalCount","Header","header","header_img","loginBlock","isAuth","href","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","CreateField","Input","formSummaryError","stopSubmit","_error","formData","initialized","appReducer","officeReducer","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","officePage","sidebar","app","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","WithSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializeApp","path","render","Login","AppContainer","withRouter","promise","Promise","all","MainApp","ReactDOM","document","getElementById","FormControl","meta","touched","children","hasError","styles","formControl","Textarea","input","restProps","child","element","placeholder","validators","text","validate"],"mappings":"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","file":"static/js/main.5bab80c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3m92A\",\"error\":\"FormsControls_error__3XOcW\",\"formSummaryError\":\"FormsControls_formSummaryError___OjWY\"};","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <img src={preloader} />\r\n}\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__arVv7\",\"header_img\":\"Header_header_img__1OR3G\",\"loginBlock\":\"Header_loginBlock__1ZiEz\"};","export const required = value => {\r\n    if (value) {\r\n        return undefined;\r\n    }\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    debugger\r\n    if (value.length > maxLength) {\r\n        return `Max Length is ${maxLength} symbols`;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport const minLength2 = value => {\r\n    if (value && value.length < 2) {\r\n        return \"Min Length is 2 symbols\";\r\n    }\r\n\r\n    return undefined;\r\n}","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD_POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hello world', countsLike: 2},\r\n        {id: 2, message: 'Hi, how are you?', countsLike: 13},\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                countsLike: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            };\r\n        case SET_USER_PROFILE : {\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        }\r\n        case SET_STATUS : {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport default profileReducer;\r\n\r\nexport const addPostActionCreator = (newPostText) => {\r\n    return {\r\n        type: ADD_POST, newPostText\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}","module.exports = __webpack_public_path__ + \"static/media/user.f7298ff5.png\";","const UPDATE_NEW_MESSAGE_TEXT = 'UPDATE-NEW-MESSAGE-TEXT';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\nconst DELETE_MESSAGE = 'DELETE_MESSAGE';\r\n\r\nlet initialState = {\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How are you?'},\r\n        {id: 3, message: 'Hi'},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: 'Matvey'},\r\n        {id: 2, name: 'Alexandra'},\r\n        {id: 3, name: 'Ilia'},\r\n        {id: 4, name: 'Viktoria'}\r\n    ]\r\n}\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, {id: 5, message: body}],\r\n\r\n            };\r\n        case DELETE_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: state.messages.filter(m=> m.id != action.messageId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default dialogsReducer;\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\nexport const deleteMessage = (messageId) => ({type: DELETE_MESSAGE, messageId})\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainTable\":\"Offices_mainTable__3gXdF\",\"tableItem\":\"Offices_tableItem__3TasN\",\"informationTable\":\"Offices_informationTable__3Rd7A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"user_userPhoto__3cJ3n\",\"selectedPage\":\"user_selectedPage__2BzYo\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.0deacccf.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    headers: {\"API-KEY\": \"ab2299f9-d637-4495-a1f1-917f06639414\"}\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 5) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => response.data);\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`);\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId);\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status});\r\n    }\r\n}\r\n\r\nexport const AuthAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`).then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3fPAD\",\"item\":\"Navbar_item__3gUmC\",\"activeLink\":\"Navbar_activeLink__8KmWo\"};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <ul className={classes.item}>\r\n                <NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink>\r\n            </ul>\r\n            <ul className={classes.item}>\r\n                <NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink>\r\n            </ul>\r\n            <ul className={classes.item}>\r\n                <NavLink to=\"/employees\" activeClassName={classes.activeLink}>Employees</NavLink>\r\n            </ul>\r\n            <ul className={classes.item}>\r\n                <NavLink to=\"/offices\" activeClassName={classes.activeLink}>Offices</NavLink>\r\n            </ul>\r\n            <ul className={classes.item}>\r\n                <NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink>\r\n            </ul>\r\n            <ul className={classes.item}>\r\n                <NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar","import React from \"react\";\r\nimport s from \"./Offices.module.css\"\r\nimport {Button, Table} from \"@mui/material\";\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\n\r\nconst Offices = (props) => {\r\n    let officeInformation = props.data.officeInformation\r\n        .map(info => <tr>\r\n            <td>{info.officeName}</td>\r\n            <td>{info.address}</td>\r\n            <td>{info.country}</td>\r\n            <Button variant=\"contained\" component=\"span\">Update</Button>\r\n            <Button variant=\"outlined\" color=\"error\" startIcon={<DeleteIcon/>}>\r\n                Delete\r\n            </Button>\r\n        </tr>);\r\n    /*    console.log(props.data.office)\r\n        let testr = props.data.office.map(el=><ul>{el.id}</ul>)*/\r\n    /*    console.log(testr);*/\r\n    return (\r\n        <div>\r\n            {/*     {testr}*/}\r\n            {/* */}\r\n            <Table className={s.mainTable}>\r\n                <tr>\r\n                    <td>\r\n                        OfficeName\r\n                    </td>\r\n                    <td>\r\n                        Address\r\n                    </td>\r\n                    <td>\r\n                        Country\r\n                    </td>\r\n                </tr>\r\n                {officeInformation}\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\nexport default Offices\r\n\r\n\r\n{/*<input placeholder=\"Enter in a username\" />\r\n                <button onClick={this.fetchUser}>Search</button>\r\n                <ul firstName={this.state.fetchUser.categoryId} lastName={this.state.fetchUser.categoryName} email={this.state.fetchUser.products} />\r\n           */\r\n}","import React from \"react\";\r\n\r\nconst Employees = (props) => {\r\n    return (\r\n        <div>\r\n            Employees\r\n        </div>\r\n    )\r\n}\r\nexport default Employees","export const updateObjectInArray = (items, itemId, objPropName, newObjectProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjectProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objects-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 20,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\",{followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\",{followed: false})\r\n            }\r\n        case SET_USERS : {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : [...state.followingInProgress.filter(id => id !== action.userId)]\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer;\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalUsersCount\r\n    }\r\n}\r\n\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching\r\n    }\r\n}\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    }\r\n}\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import Pagination from '@mui/material/Pagination';\r\nimport React, {useState} from \"react\";\r\nimport usePagination from \"@mui/material/usePagination\";\r\nimport {findByTestId} from \"@testing-library/react\";\r\n\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage , onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount/portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionNumber = portionNumber * portionSize;\r\n\r\n\r\n    // this an example using hooks\r\n    return <div>\r\n\r\n     {/*   <Pagination count={pagesCount} variant=\"outlined\" color=\"primary\" currentPage = {page}/>*/}\r\n\r\n       {/* {portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber-1)}>Prev</button>}\r\n\r\n        {pages.filter(p=> p => leftPortionPageNumber && p <= rightPortionNumber)\r\n            .map((p) => {\r\n            return <span key={p} onClick={(event => {\r\n                onPageChanged(p);\r\n            })}>{p}</span>\r\n            })\r\n        }\r\n\r\n        {portionCount > portionNumber && <button onClick={() => setPortionNumber((portionNumber+1))}>Next</button>\r\n            }*/}\r\n\r\n       {/* <Pagination count={pagesCount} variant=\"outlined\" color=\"primary\" d  efaultPage={1}/>*/}\r\n       {/* <Pagination count={pagesCount} variant=\"outlined\" color=\"primary\" >{currentPage} </Pagination>*/}\r\n        <Pagination count={pagesCount} variant=\"outlined\" color=\"primary\"\r\n                        onClick={(e) => {\r\n                           onPageChanged(e.target.textContent);}}/>\r\n\r\n     {/*   <Pagination hidePrevNext hideFirstLast\r\n                    page={currentPage} setPage={setPage} count={pagesCount}   />*/}\r\n    </div>\r\n}\r\nexport default Paginator","import style from \"./user.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {Button, Pagination} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user,followingInProgress,unfollow,follow }) => {\r\n    return (\r\n        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + user.id}>\r\n                            <img src={user.photos.value ? user.photos : userPhoto} className={style.userPhoto}/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed ?\r\n                            <Button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                unfollow(user.id);\r\n                            }}>Unfollow</Button> :\r\n\r\n                            <Button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id);\r\n                            }}>Follow</Button>}\r\n                    </div>\r\n                </span>\r\n        <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"u.location.country\"}</div>\r\n                        <div>{\"u.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n    </div>\r\n    )\r\n}\r\nexport default User","import React from \"react\";\r\nimport Paginator from \"../Common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\r\n    return <div>\r\n        {\r\n            users.map(u =>\r\n                <User user={u}\r\n                      followingInProgress={props.followingInProgress}\r\n                      key={u.id}\r\n                      unfollow={props.unfollow}\r\n                      follow={props.follow}\r\n                />\r\n            )\r\n        }\r\n        <Paginator currentPage={props.currentPage}\r\n                   onPageChanged={onPageChanged}\r\n                   totalUsersCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n                   portionSize = {10}/>\r\n    </div>\r\n}\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\nexport const getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true)\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    followSuccess,\r\n    setCurrentPage,\r\n    unfollowSuccess,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from \"../../redux/user-reducer\";\r\nimport Users from \"./Users\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/user-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        let {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.followSuccess}\r\n                   unfollow={this.props.unfollowSuccess}\r\n                   toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {followSuccess, unfollowSuccess, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers}),\r\n) (UsersContainer)\r\n","import React from \"react\";\r\nimport s from '../Header.module.css';\r\nimport {Button} from \"@mui/material\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://cdn.logo.com/hotlink-ok/logo-social.png' className={s.header_img}/>\r\n\r\n        <div className={s.loginBlock}>\r\n            {\r\n                props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> :\r\n                    <Button href={'/login'}>Login</Button>\r\n            }\r\n        </div>\r\n\r\n    </header>\r\n}\r\nexport default Header","import {AuthAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'social-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, email, login, isAuth}\r\n})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await AuthAPI.me();\r\n    if (response.resultCode === 0) {\r\n        let {id, login, email} = response.data\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await AuthAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0 ? response.data.messages : \"Some error\";\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await AuthAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render() {\r\n        return <Header {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {CreateField, Input} from \"../Common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validator\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"../Common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                {CreateField(\"Email\", \"email\", [required], Input)}\r\n                {CreateField(\"Password\", \"password\", [required], Input, {type:\"password\"})}\r\n                {CreateField(null, \"rememberMe\", null, Input, {type:\"checkbox\"}, \"remember me\")}\r\n            </div>\r\n\r\n            {error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>}\r\n            <div>\r\n                <button variant=\"contained\">Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({\r\n    form: 'login'\r\n})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALZED_SUCCESS = 'INITIALZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n\r\n        default :\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess());\r\n        })\r\n}\r\n\r\nexport default appReducer;\r\n\r\n\r\n\r\n","let initialState = {\r\n    officeInformation: [\r\n        {id: 1, address: 'Mogilev', officeName: 'MyOffice', country: 'Belarus'},\r\n        {id: 1, address: 'Mogilev', officeName: 'MyOffice', country: 'Belarus'},\r\n    ]\r\n}\r\nconst officeReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\nexport default officeReducer;","let initialState ={};\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport officeReducer from \"./office-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport userReducer from \"./user-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers ({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    officePage: officeReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: userReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n\r\nexport default store;","import Preloader from \"../Common/Preloader/Preloader\";\r\nimport React from \"react\";\r\n\r\n\r\nexport const WithSuspense= (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}","import './App.css';\r\nimport React from \"react\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Offices from \"./components/Offices/Offices\";\r\nimport Employees from \"./components/Employees/Employees\";\r\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport Login from \"./components/Login/Login\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport Preloader from \"./components/Common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport store from \"./redux/redux-store\";\r\nimport {WithSuspense} from \"./components/Hoc/WithSuspence\";\r\n\r\n\r\nconst ProfileContainer = React.lazy(()=>import('./components/Profile/ProfileContainer'));\r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        } else {\r\n            return (\r\n                <div className='app-wrapper'>\r\n                    <HeaderContainer/>\r\n                    <Navbar/>\r\n                    <div className='app-wrapper-content'>\r\n                        <Route path='/dialogs' render={WithSuspense(DialogsContainer)}/>\r\n                        <Route path='/profile/:userId?' render={WithSuspense(ProfileContainer)}/>\r\n                        <Route path='/users' render={WithSuspense(UsersContainer)}/>\r\n                        <Route path='/offices' render={WithSuspense(Offices)}/>\r\n                        <Route path='/employees' render={WithSuspense(Employees)}/>\r\n                        <Route path='/login'\r\n                               render={WithSuspense(Login)}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose\r\n(withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\n\r\nconst MainApp = (props) => {\r\n   return <BrowserRouter>\r\n        <Provider store = {store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default MainApp;","import './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from \"./App\";\r\n\r\n    ReactDOM.render(\r\n            <MainApp/>,\r\n        document.getElementById('root')\r\n    );\r\n\r\nreportWebVitals();\r\n","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\"\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, element, ...restProps} = props;\r\n    return (<FormControl {...props}>{<textarea {...input} {...restProps}/>}</FormControl>)\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n    return (<input {...input} {...props}/>)\r\n}\r\n\r\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component}\r\n               validate={validators}\r\n               {...props}\r\n        />{text}\r\n    </div>\r\n)"],"sourceRoot":""}